{"version":3,"sources":["index.ts"],"names":[],"mappings":";;AAAA;;;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA,IAAA,IAAA,GAAA,eAAA,CAAA,OAAA,CAAA,IAAA,CAAA,CAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CACtB,IAAA,CAAA,OAAE,CAAC,YAAY,CAAC,cAAc,EAAE;EAAE,QAAQ,EAAE;AAAO,CAAE,CAAC,CACvD;AACD,IAAM,eAAe,GAAG,KAAK,CAAC,KAAK;AAEnC,IAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CACtB,IAAA,CAAA,OAAE,CAAC,YAAY,CAAC,cAAc,EAAE;EAAE,QAAQ,EAAE;AAAO,CAAE,CAAC,CACvD;AACD,IAAM,eAAe,GAAG,KAAK,CAAC,KAAK;AAEnC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,eAAe,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;EAC/C,IAAI,OAAO,GAAG,KAAK;EACnB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,eAAe,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;IAC/C,IAAI,eAAe,CAAC,CAAC,CAAC,CAAC,EAAE,KAAK,eAAe,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE;MACnD,OAAO,GAAG,IAAI;MACd;;;EAGJ,IAAI,OAAO,KAAK,KAAK,EAAE;IACrB,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC","file":"JsonPractical.77de5100.js","sourceRoot":"..","sourcesContent":["// import axios from 'axios';\n\n// async function main() {\n//   const data1Object = await axios.get('http://localhost:3000/Data1');\n//   const data1: Array<{ id: number; name: string }> = data1Object.data;\n//   const data2Object = await axios.get('http://localhost:4000/Data2');\n//   const data2: Array<{ id: number; name: string }> = data2Object.data;\n//   console.log(data1);\n//   console.log(data2);\n//   for (let i = 0; i < data1.length; i++) {\n//     let isFound = false;\n//     for (let j = 0; j < data2.length; j++) {\n//       if (data1[i].id === data2[j].id) {\n//         isFound = true;\n//         break;\n//       }\n//     }\n//     if (isFound === false) {\n//       console.log(data1[i]);\n//     }\n//   }\n// }\n\n// main();\nimport fs from 'fs';\n// const data1: string[][] = fs\n//   .readFileSync('file1.csv', {\n//     encoding: 'utf-8',\n//   })\n//   .split('\\n')\n//   .map((row: string): string[] => {\n//     return row.split(',');\n//   });\n// const data = () => {\n//   return JSON.parse(fs.readFileSync('./file1.json', 'utf-8'));\n// };\n// const data1 = data();\n// const collection = data1;\n// console.log(collection);\nconst data1 = JSON.parse(\n  fs.readFileSync('./file1.json', { encoding: 'utf-8' })\n);\nconst Data1Collection = data1.Data1;\n\nconst data2 = JSON.parse(\n  fs.readFileSync('./file2.json', { encoding: 'utf-8' })\n);\nconst Data2Collection = data2.Data2;\n\nfor (let i = 0; i < Data1Collection.length; i++) {\n  let isFound = false;\n  for (let j = 0; j < Data2Collection.length; j++) {\n    if (Data1Collection[i].id === Data2Collection[j].id) {\n      isFound = true;\n      break;\n    }\n  }\n  if (isFound === false) {\n    console.log(Data1Collection[i]);\n  }\n}\n"]}